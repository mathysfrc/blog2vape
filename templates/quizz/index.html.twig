{% extends 'base.html.twig' %}

{% block title %}Hello QuizzController!
{% endblock %}

{% block stylesheets %}
	{{ parent()}}
	{{ encore_entry_link_tags('quizz') }}
{% endblock %}

{% block body %}
			<div class="fullpage black-bg centered">
			<div class="container start">
				<h1 id="questionaire-title" class="titleQuizz">Quelle vape est faite pour toi ?</h1>
				<div class="centered">
					<div class="button" onclick="showPage(2); setupQuestion();">
						<p class="start">START</p>
					</div>
				</div>
			</div>
			<div class="container hidden">
				<h1 id="personality-type"></h1>
				<p id="personality-part-1"></p>
				<p id="personality-part-2"></p>
				<p id="personality-recommended"></p>
				<br>
				<div class="centered">
					<div class="button" onclick="showPage(0); setupQuestion();">
						<p class="retry">
							<a href="/vape">Suivant</a>
						</p>
					</div>
				</div>
			</div>
			<div class="container hidden">
				<div id="progress-bar">
					<div id="progress">1/5</div>
				</div>
				<h2 id="question"></h2>
				<div class="option" id="option0" onclick="select(this)">
					<input type="radio" name="answer" value="0" onchange="next()">
					<div class="content centered"></div>
					<br>
				</div>
				<div class="option" id="option1" onclick="select(this)">
					<input type="radio" name="answer" value="1" onchange="next()">
					<div class="content centered"></div>
					<br>
				</div>
				<div class="option" id="option2" onclick="select(this)">
					<input type="radio" name="answer" value="2" onchange="next()">
					<div class="content centered"></div>
					<br>
				</div>
				<div class="option" id="option3" onclick="select(this)">
					<input type="radio" name="answer" value="3" onchange="next()">
					<div class="content centered"></div>
					<br>
				</div>
			</div>
		</div>
	{% endblock %}

{% block javascripts %}
	<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
	<script src="js/scripts.js"></script>
	<script>
		// constant to store all the questions and answers
const questions = {
question0: {
question: "Combien de cigarette fum(i)ez-vous ?",
option0: {
content: 'Entre 0 et 10',
personality: "Adventurous"
},
option1: {
content: 'Entre 10 et 20',
personality: "Intellectual"
},
option2: {
content: 'Entre 1 et 2 paquets',
personality: "Immersed"
},
option3: {
content: 'Plus de 2 paquets',
personality: "Dreamy"
}
},
question1: {
question: "Depuis quand avez-vous arrêté ?",
option0: {
type: "string",
content: "Moins de 2 mois",
personality: "Adventurous"
},
option1: {
type: "string",
content: "Entre 2 et 5 mois",
personality: "Intellectual"
},
option2: {
type: "string",
content: "Entre 5 mois et 1 an",
personality: "Immersed"
},
option3: {
type: "string",
content: " + de 1 an",
personality: "Dreamy"
}
},
question2: {
question: "Que voulez-vous",
option0: {
type: "string",
content: "Arrêter de fumer",
personality: "Adventurous"
},
option1: {
type: "string",
content: "Réduire votre consommation de tabac",
personality: "Dreamy"
},
option2: {
type: "string",
content: "Juste essayer",
personality: "Intellectual"
},
option3: {
type: "string",
content: "Faire beaucoup de fumée",
personality: "Immersed"
}
},
question3: {
question: "Quel type de vape cherchez-vous",
option0: {
type: "string",
content: "De la forme d'une cigarette",
personality: "Immersed"
},
option1: {
type: "string",
content: "Avec un bouton pour effectuer le tirage",
personality: "Intellectual"
},
option2: {
type: "string",
content: "Une vape discrète",
personality: "Dreamy"
},
option3: {
type: "string",
content: "Une grosse vape",
personality: "Adventurous"
}
},
question4: {
question: "Pourquoi voulez-vous arrêter de fumer",
option0: {
type: "string",
content: "Familial",
personality: "Adventurous"
},
option1: {
type: "string",
content: "Santée",
personality: "Intellectual"
},
option2: {
type: "string",
content: "Argent",
personality: "Dreamy"
},
option3: {
type: "string",
content: "Simple décision",
personality: "Immersed"
}
}
};

// constant to store the description for each type of traveller
const result = {
Adventurous: ["Tu es toujours prêt à relever des défis, à essayer de nouvelles activités extrêmes et à sortir de sa zone de confort. Tu aimes explorer des destinations éloignées et hors des sentiers battus, et souvent accompagné d'un groupe d'amis qui partagent ta passion pour l'aventure"],
Immersed: ["Tu aimes faire la fête et profiter de la vie nocturne dans chaque destination qu'il visite. Toujours prêt à sortir dans les clubs, les bars et les festivals locaux, et souvent accompagné d'un groupe d'amis qui partagent ta passion pour la fête."],
Intellectual: ["Tu es passionné par la cuisine locale et aime essayer de nouveaux plats et de nouvelles saveurs. Tu aimes visiter des marchés locaux, des restaurants et des bars à tapas, et tu es souvent accompagné d'un groupe d'amis qui partagent ta passion pour la gastronomie"],
Dreamy: ["If your travel dreams are populated by the perfect sunset on a secluded beach in the Seychelles, gondola rides in Venice, and catching falling Sakura flowers, this is probably you.", "Travel can be an amazing way to inspire creativity and connect with your inner muse! Check out Travel and Leisure's list of the 50 most dreamy places for a general idea of what's out there in the way of romantic destinations. The notion of taking off to far-flung places is a dream come through in itself, so grab your passports, and get out and see the world.", "Recommended spots for dreamy travelers: Santorini, Venice, Paris, Buenos Aires, Goa, Bali, Phuket, Fiji, Tahiti."]
};

// for keeping track of the score
var score = {
Adventurous: 0,
Immersed: 0,
Intellectual: 0,
Dreamy: 0
};

// for keep track of the current question
var currentQn = 0;

// for setting up each of the questions
function setupQuestion() { // find out the current percentage of completion and updates the css
var progress = 20 + currentQn * 20;
var progressbar = document.getElementById("progress");
progressbar.style.width = progress + "%";
progressbar.innerText = currentQn + 1 + "/5";

// get the current questions content
var qn = questions["question" + currentQn];
var qnText = document.getElementById("question");
qnText.innerText = qn.question;

// updates each of the options for the current question
for (var i = 0; i < 4; i++) {
var option = document.getElementById("option" + i);
var content = option.getElementsByClassName("content")[0];
var qnOption = qn["option" + i];
if (qnOption.type == "image") {
var htmlStr = "<img src='" + qnOption.content + "'>";
content.innerHTML = htmlStr;
} else {
var htmlStr = "<p>" + qnOption.content + "</p>";
content.innerHTML = htmlStr;
}
}
}

// to unselect all of the options
function resetOptions() {
var btn = document.getElementsByTagName("input");
btn[0].checked = false;
btn[1].checked = false;
btn[2].checked = false;
btn[3].checked = false;
}

// to select the option that is clicked
function select(element) {
var btn = element.getElementsByTagName("input")[0];
btn.checked = true;
next();
}

// get the next questions, or display result if all questions were answered
function next() { // get the current select option
var ans = $("input[name=answer]:checked").val();
var qn = questions["question" + currentQn];
// get the personality type for the option selected
var personality = qn["option" + ans].personality;
// increase the score of the personality by one
score[personality]++;
// increase the question count by 1
currentQn = currentQn + 1;
// unselect all options
resetOptions();
// check if quiz is completed
if (currentQn < 5) { // if quiz not completed, setup the next question
setupQuestion();
} else {
// else quiz is completed
// assume that the highest score is the adventurous personality
// and go through each of the personality type, and update the highest score and personality
var highestScore = score["Adventurous"];
var highestPersonality = "Adventurous";
if (highestScore < score["Intellectual"]) {
highestScore = score["Intellectual"];
highestPersonality = "Intellectual";
}
if (highestScore < score["Immersed"]) {
highestScore = score["Immersed"];
highestPersonality = "Immersed";
}
if (highestScore < score["Dreamy"]) {
highestScore = score["Dreamy"];
highestPersonality = "Dreamy";
}

// get the description of the personality and update the result page
var personalityResult = result[highestPersonality];
document.getElementById("personality-type").innerText = highestPersonality + " Traveller";
document.getElementById("personality-part-1").innerText = personalityResult[0];
document.getElementById("personality-part-2").innerText = personalityResult[1];
document.getElementById("personality-recommended").innerText = personalityResult[2];
// set question count to 0 so that when the user wishes to retry, the quiz is on the right question count
currentQn = 0;
showPage(1);
}
}

// bring the particular page into view.
// page 0: start page
// page 1: result page
// page 2: quiz
function showPage(num) {
var pages = document.getElementsByClassName("container");
pages[0].style.display = "none";
pages[1].style.display = "none";
pages[2].style.display = "none";
pages[num].style.display = "block";
}
	</script>
{% endblock %}
